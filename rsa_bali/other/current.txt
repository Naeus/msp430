#include <msp430g2553.h>
//#include <math.h>
//#include "bali_rand.h"
#include "32-bit_det_MR.h"

#define E 3
#define BLOCKSIZE 4

int main(void) {
  volatile int i;
  //unsigned long n = 4294967291;
  volatile unsigned char z;
  volatile unsigned long long p;
  volatile unsigned long long q;
  volatile unsigned long long n;
  volatile unsigned long long m = 3240039962;

  long long s, t;
  volatile unsigned long long totn;
  volatile unsigned long long d;
  volatile unsigned long long c;
  volatile unsigned long long pt;

  const unsigned char msg [] = 'A ,\'.bz';
  unsigned char mbuf;

  // stop watchdog timer
  WDTCTL = WDTPW | WDTHOLD;
  // set up bit 0 of P1 as output
  P1DIR = BIT0+BIT6;
  // intialize bit 0 of P1 to 0
  P1OUT = 0x00;
  // loop forever
  for (;;) {
	  p = rsae3prime_gen();
	  q = rsae3prime_gen();
	  z = miller_rabin(p);

	  totn = (p - 1) * (q - 1);
	  d = gcdExtended(E, totn, &s, &t);

	  if (s < 0) {
	    d = s + totn;
	  }

	  else  {
	    d = s;
	  }
	  n = p * q;
	  c = pow_mod_of(m, E, n);
	  pt = pow_mod_of(c, d, n);
    // toggle bit 0 of P1
  	  P1OUT ^= BIT6;
	  if(t){
	  	  P1OUT ^= 0x01;
	  }
    // delay for a while
   // for (i = 0; i < 0x6000; i++);
  }
}
