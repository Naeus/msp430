#include <msp430g2553.h>
#include "bali_math.h"
#include "32-bit_det_MR.h"
#include "parsing.h"

#define E 3

int main(void) {

  // stop watchdog timer
  WDTCTL = WDTPW | WDTHOLD;
  // set up bit 0 of P1 as output
  P1DIR = BIT0+BIT6;
  // intialize bit 0 of P1 to 0
  P1OUT = 0x00;

  unsigned long long p;
  unsigned long long q;
  unsigned long long n;

  long long s, t;
  unsigned long long totn;
  unsigned long long d;

  unsigned char msg[] = "A ,\'.bz";
  unsigned char blocksiz = sizeof(msg)/sizeof(msg[0]) + 2;
  unsigned long blocks[10] = {0};	//somehow disrupts blocksiz when greater than 125 in size
  unsigned long ct[10] = {0};
  //unsigned long pt[10] = {0};

  encode(msg, blocks, blocksiz);

  p = rsae3prime_gen();
  q = rsae3prime_gen();

  totn = (p - 1) * (q - 1);
  d = gcdExtended(E, totn, &s, &t);

  if (s < 0) {
    d = s + totn;
  }

  else  {
    d = s;
  }
  n = p * q;


  ct[1] = PowMod(blocks[1], E, n);
  /*
  unsigned char i = 0;
  for (i=0; i<blocksiz; i++) {
	  ct[i] = PowMod(blocks[i], E, n);
	  //pt[i] = PowMod(ct[i], d, n);
  }
  */

  // loop forever
  while (1) {


    // toggle bit 0 of P1
  	  P1OUT ^= BIT6;
	  if(t){
	  	  P1OUT ^= 0x01;
	  }
  }
}
